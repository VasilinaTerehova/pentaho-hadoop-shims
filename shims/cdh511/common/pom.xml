<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pentaho</groupId>
    <artifactId>pentaho-hadoop-shims-cdh511-reactor</artifactId>
    <version>8.1-SNAPSHOT</version>
  </parent>
  <artifactId>pentaho-hadoop-shims-cdh511-common</artifactId>
  <version>8.1-SNAPSHOT</version>
  <packaging>bundle</packaging>
  <properties>
    <shim.type>CDH</shim.type>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
      <version>${org.xerial.snappy.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <version>${org.apache.hadoop.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>jline</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-core</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-app</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-common</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-jobclient</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-shuffle</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-annotations</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-api</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-common</artifactId>
      <version>${org.apache.hadoop.version}</version>
      <exclusions>
        <!-- exclude not to conflict with default folder -->
        <exclusion>
          <groupId>javax.xml.stream</groupId>
          <artifactId>stax-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-server-applicationhistoryservice</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-server-common</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-server-resourcemanager</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-server-web-proxy</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-hadoop-shim</artifactId>
      <version>8.1-SNAPSHOT</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-shim</artifactId>
      <version>8.1-SNAPSHOT</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-hdfs-vfs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-hdfs</artifactId>
      <version>8.1-SNAPSHOT</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <version>4.3.1</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-common-sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-hadoop-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-hdfs</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dependencies</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <markersDirectory>${project.build.directory}/dependencies/dependency-maven-plugin-markers
              </markersDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pentaho-hdfs-vfs</artifactId>
                  <version>8.1-SNAPSHOT</version>
                  <type>jar</type>
                  <outputDirectory>${project.build.directory}/dependencies/hadoop-common</outputDirectory>
                  <includes>META-INF/vfs-providers.xml</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.pentaho</groupId>
        <artifactId>maven-dependency-resolver-plugin</artifactId>
        <version>1.0</version>
        <configuration>
          <resolverFilters>
            <resolverFilter>
              <include>*:*mapreduce*,*:hadoop-hdfs*,*hadoop-annotation*,*:hadoop-yarn*,*:hadoop-client</include>
              <exclude>*:*tests*,*:*xerces*,*:*xml*</exclude>
              <transitive>true</transitive>
            </resolverFilter>
            <resolverFilter>
              <include>*:*java-protobuf,*:*metrics*,*:*pentaho-hdfs-vfs</include>
              <exclude>*:*tests*</exclude>
              <transitive>false</transitive>
            </resolverFilter>
          </resolverFilters>
        </configuration>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>resolve</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.igormaznitsa</groupId>
        <artifactId>jcp</artifactId>
        <version>${com.igormaznitsa.jcp.version}</version>
        <executions>
          <execution>
            <id>preprocessSources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <globalVars>
            <property>
              <name>shim_type</name>
              <value>${shim.type}</value>
            </property>
            <property>
              <name>shim_name</name>
              <value>${shim.name}</value>
            </property>
          </globalVars>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${dependency.maven-bundle-plugin.version}</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <DynamicImport-Package>*</DynamicImport-Package>
            <Import-Package>
              org.pentaho.hadoop.shim;version=8.0.0,
              org.pentaho.hadoop.shim.api.*;version=8.0.0,
              org.pentaho.hadoop.shim.spi.*;version=8.0.0
            </Import-Package>
            <Export-Package>
              org.apache.htrace;version=8.0.0.cdh511,
              org.apache.commons.logging;version=8.0.0.cdh511,
              com.google.common.annotations;version=8.0.0.cdh511,
              org.codehaus.jackson;version=8.0.0.cdh511,
              org.apache.hadoop.security;version=8.0.0.cdh511,
              org.apache.hadoop.security.token;version=8.0.0.cdh511,
              org.apache.hadoop.conf;version=8.0.0.cdh511,
              org.apache.hadoop.fs;version=8.0.0.cdh511,
              org.apache.hadoop.hdfs;version=8.0.0.cdh511,
              com.google.protobuf;version=8.0.0.cdh511,
              org.apache.commons.codec;version=8.0.0.cdh511,
              org.apache.commons.codec.binary;version=8.0.0.cdh511,
              org.apache.hadoop.classification;version=8.0.0.cdh511,
              org.apache.commons.cli;version=8.0.0.cdh511,
              <!--needed-->
              org.apache.hadoop.io;version=8.0.0.cdh511,
              org.apache.hadoop.io.compress;version=8.0.0.cdh511,
              org.apache.hadoop.net;version=8.0.0.cdh511,
              org.apache.hadoop.ipc;version=8.0.0.cdh511,
              org.apache.hadoop.ipc.metrics;version=8.0.0.cdh511,
              org.apache.hadoop;version=8.0.0.cdh511,
              org.apache.hadoop.gateway;version=8.0.0.cdh511,
              <!--needed hdfs-->
              org.apache.hadoop.util;version=8.0.0.cdh511,
              org.apache.hadoop.metrics2;version=8.0.0.cdh511,
              org.apache.hadoop.mapred;version=8.0.0.cdh511,
              org.apache.hadoop.mapreduce;version=8.0.0.cdh511,
              org.apache.zookeeper;version=8.0.0.cdh511,
              org.apache.jute;version=8.0.0.cdh511,
              org.apache.hadoop.gateway.shell;version=8.0.0.cdh511,
              io.netty;version=8.0.0.cdh511,
              com.yammer.metrics;version=8.0.0.cdh511,
              org.pentaho.hdfs.vfs;version=8.0.0
            </Export-Package>
            <!--org.apache.avro;version=8.0.0.cdh511,-->
            <Embed-Dependency>*</Embed-Dependency>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pentaho</groupId>
    <artifactId>pentaho-hadoop-shims-cdh511-reactor</artifactId>
    <version>8.0-SNAPSHOT</version>
  </parent>
  <artifactId>pentaho-hadoop-shims-cdh511-hbase</artifactId>
  <version>8.0-SNAPSHOT</version>
  <packaging>bundle</packaging>
  <properties>
    <shim.type>CDH</shim.type>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-client</artifactId>
      <version>${org.apache.hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.htrace</groupId>
      <artifactId>htrace-core</artifactId>
      <version>3.2.0-incubating</version>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>2.5.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-hadoop-compat</artifactId>
      <version>${org.apache.hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-common</artifactId>
      <version>${org.apache.hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-protocol</artifactId>
      <version>${org.apache.hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-server</artifactId>
      <version>${org.apache.hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-thrift</artifactId>
      <version>${org.apache.hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.4.9</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-cdh511-common</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-cdh511-scope-default</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-hbase</artifactId>
      <version>8.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-big-data-legacy</artifactId>
      <version>8.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
      <version>${zookeeper.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-common-sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-mapred</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-hbase</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <!--todo: should be deleted, we don't need bootstrap-->
                <!--<artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pentaho-big-data-legacy</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>-->
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-hbase</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dependencies</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <markersDirectory>${project.build.directory}/dependencies/dependency-maven-plugin-markers
              </markersDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.hbase</groupId>
                  <artifactId>hbase-common</artifactId>
                  <version>${org.apache.hbase.version}</version>
                  <type>jar</type>
                  <outputDirectory>${project.build.directory}/dependencies/hbase-common</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--<plugin>
        <groupId>com.pentaho</groupId>
        <artifactId>maven-dependency-resolver-plugin</artifactId>
        <version>1.0-SNAPSHOT</version>
        <configuration>
          <resolverFilter>
            <include>org.xerial.snappy:snappy-java,pentaho:pentaho-hdfs-vfs,org.apache.hive:hive-jdbc,org.apache.oozie:oozie-core,org.apache.oozie:oozie-client,org.apache.sqoop:sqoop,org.apache.pig:pig,com.twitter:parquet-hadoop-bundle</include>
            <exclude>log4j:log4j,org.mockito:mockito-all,junit:*,com.google.guava:*,xml-apis:xml-apis,commons-collections:commons-collections,org.apache.zookeeper:zookeeper,org.apache.hadoop:hadoop-annotations,org.apache.hadoop:hadoop-yarn-api,org.apache.hadoop:hadoop-yarn-commo,org.apache.hadoop:hadoop-yarn-server-applicationhistoryservice,org.apache.hadoop:hadoop-yarn-server-common,org.apache.hadoop:hadoop-yarn-server-resourcemanager,org.apache.hadoop:hadoop-yarn-server-web-proxy,*:tests,*:hive-exec,org.apache.curator:apache-curator,*:logredactor,*:datanucleus-core,*:hbase-common,*:ST4</exclude>
            <transitive>false</transitive>
          </resolverFilter>
          <resolverFilter>
            <include>org.apache.hive:hive-serde,org.apache.hive:hive-common,org.apache.hive:hive-exec,org.apache.hive:hive-service,org.apache.hive:hive-metastore,dk.brics.automaton:automaton</include>
            <exclude>com.fasterxml.jackson.core:jackson-databind,log4j:log4j,org.mockito:mockito-all,junit:*,com.google.guava:*,xml-apis:xml-apis,commons-collections:commons-collections,org.apache.zookeeper:zookeeper,org.apache.hadoop:hadoop-annotations,org.apache.hadoop:hadoop-yarn-api,org.apache.hadoop:hadoop-yarn-commo,org.apache.hadoop:hadoop-yarn-server-applicationhistoryservice,org.apache.hadoop:hadoop-yarn-server-common,org.apache.hadoop:hadoop-yarn-server-resourcemanager,org.apache.hadoop:hadoop-yarn-server-web-proxy,*:tests,*:hive-exec,org.apache.curator:apache-curator,*:logredactor,*:datanucleus-core,*:hbase-common,*:ST4</exclude>
            <transitive>true</transitive>
          </resolverFilter>
        </configuration>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>resolve</goal>
            </goals>
          </execution>
        </executions>
      </plugin>-->
      <plugin>
        <groupId>com.igormaznitsa</groupId>
        <artifactId>jcp</artifactId>
        <version>${com.igormaznitsa.jcp.version}</version>
        <executions>
          <execution>
            <id>preprocessSources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <globalVars>
            <property>
              <name>shim_type</name>
              <value>${shim.type}</value>
            </property>
            <property>
              <name>shim_name</name>
              <value>${shim.name}</value>
            </property>
          </globalVars>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${dependency.maven-bundle-plugin.version}</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <DynamicImport-Package>*</DynamicImport-Package>
            <Import-Package>
              org.pentaho.hadoop.shim.api.*;version=8.0.0,
              org.pentaho.hadoop.shim.spi.*;version=8.0.0,
              org.apache.hadoop.ipc.*;version=8.0.0.cdh511,
              org.apache.hadoop.security.*;version=8.0.0.cdh511,
              org.apache.hadoop.conf.*;version=8.0.0.cdh511,
              org.apache.hadoop.fs.*;version=8.0.0.cdh511,
              org.apache.hadoop.hdfs.*;version=8.0.0.cdh511,
              com.google.protobuf.*;version=8.0.0.cdh511
            </Import-Package>
            <Export-Package>
              org.apache.hadoop.hbase.*;version=8.0.0.cdh511
            </Export-Package>
            <Include-Resource>target/dependencies/hbase-common/hbase-default.xml,{maven-resources}</Include-Resource>
            <Embed-Dependency>artifactId=!pentaho*|xerces*|xml-api*|guava;inline=false</Embed-Dependency>
            <Embed-Transitive>true</Embed-Transitive>
            <Bundle-ClassPath>.,{maven-dependencies}</Bundle-ClassPath>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
